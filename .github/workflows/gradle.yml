name: Java CI 
  
on:
  push:
    branches: [ "temp" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # - name: make mysql.yml
    #   run: |
    #     cd ./commerce03/src/main/resources
    #     # mysql.yml 파일 생성
    #     touch ./mysql.yml     

    # - name: Create mysql.yml
    #   run: |
    #     echo "${{ secrets.DB_YML }}" >> ./mysql.yml
    #     # echo "spring:" >> ./mysql.yml
    #     # echo "  datasource:" >> ./mysql.yml
    #     # echo "    url: jdbc:mysql://${{ secrets.DB_HOST}}:3306/${{ secrets.DB_NAME }}" >> ./mysql.yml
    #     # echo "    username: ${{ secrets.DB_USER }}" >> ./mysql.yml
    #     # echo "    password: ${{ secrets.DB_PASSWORD }}" >> ./mysql.yml
        
    - name: docker build and push
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        cd ./commerce03
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/commerce .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/commerce


#배포 Job
  deploy:
    needs: build  # build 후에 실행되도록 정의
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker-compose down && docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/commerce:latest
            docker-compose up -d
